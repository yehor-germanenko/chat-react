class ProfileFrom extends React.Component {

    state = {
        editModeEmail: false,
        editModeName: false,
        editModePassword: false,

    };

    activateEditMode = (mode) => {
        switch (mode) {
            case "email":
                this.setState( {
                    editModeEmail: true
                });
                break;

            case "name":
                this.setState( {
                    editModeName: true
                });
                break;

            case "password":
                this.setState( {
                    editModeName: true
                });
                break;

            default:
                console.log('Wrong edit mode name!');
        }
    };

    deactivateEditMode(mode) {
        switch (mode) {
            case "email":
                this.setState( {
                    editModeEmail: false
                });
                break;

            case "name":
                this.setState( {
                    editMode: false
                });

                //this.props.updateStatus(this.state.status);
                break;

            case "password":
                this.setState( {
                    editMode: false
                });

                break;

            default:
                console.log('Wrong edit mode name!');
        }
    };

    render() {

        console.log("email_form", this.props.email)
        return (
            <form onSubmit={this.props.handleSubmit}>
                {!this.state.editModeEmail &&
                    <div>
                        <span>{this.props.email}</span>
                        <button onClick={this.activateEditMode.bind(this, "email")} className="button">Change</button>
                    </div>
                }

                {this.state.editModeEmail &&
                    <div>
                        <div className="fieldWrapper">
                            <Field placeholder={"New email"} name={"email"}
                                validate={[required, emailValid]}
                                component={Input}/>
                            
                            <Field placeholder={"password"} name={"password"} type={"password"}
                                validate={[required]}
                                component={Input}/>
                        </div>
                        { this.props.error && <div className={sControls.formSummaryError}>{this.props.error}</div>}
                        <button name={"emailButton"} className="button" >Ð¡onfirm changes</button>
                    </div>
                }
            </form>
        )
    };
}